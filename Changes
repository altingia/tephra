Revision history for Tephra

Version	Date	Location
0.06.1	2/09/17	Vancouver, BC

- Add method to evaluate whether the BLAST-merging step increases the number of elements
  in families for 'classifyltrs' command over the domain-based clustering method. 
  For plants, the BLAST-merging step is routinely used for family-level designations and leads
  to fewer singletons. For animals, or species with divergent LTR elements, the BLAST-merging
  step will create all singletons and no elements in families, so evaluating both procedures
  is the current best general approach to classification of LTR families.
- Bug fix for 'findtrims' command that was exiting when no elements were found under strict 
  conditions. Now this is handled correctly and output will be written.

0.06.0	1/25/17	Vancouver, BC

- Clean up file paths across in all classes to use absolute paths instead
  of relative to avoid problems.
- Modify handling of genometools index files to not assume they are in the working directory.
  This ensures they will be cleaned up as expected.
- Reduce output of 'findltrs' and 'findtrims' commands to GFF3 only.
- Add --debug option for 'findtrims' command.
- Add -o output file option for 'findtrims' command to clarify what result files are generated.
- Reduce memory usage with 'findhelitrons' command and clean up intermediate files.
- Add checks for required input files to 'maskref' command.
- Modify output of 'findnonltrs' command to have identical basename for FASTA/GFF3.
- Modify output	of 'classifyltrs' command to have identical basename for FASTA/GFF3.
- Modify output of 'findtirs' command to have identical basename for FASTA/GFF3.
- Modify output of 'findtrims' command to have identical basename for FASTA/GFF3.
- Modify output of 'findhelitrons' command to have identical basename for FASTA/GFF3.
- Modify output of 'classifytirs' command to have identical basename for FASTA/GFF3.
- Change short option for input GFF3 to 'classifytirs' command to '-i' for consistency.
- Trim end of translated file with 'findnonltrs' command and silence trivial warnings during 
  translation.
- Remove alignment files generated by 'illrecomb' command by default.
- Add correct 3-letter code to FASTA output of 'findtrims' command for getting the type
  when generating masking report.
- Fix bug that was causing chromosomes to not be indexed with 'findnonltrs' command.
- Fix bug that was causing warnings from 'maskref' command due to alignments not being reported.

0.05.0	1/12/17	Vancouver, BC

- Add test to 'sololtr' command to ensure the expected file of LTR exemplar sequences
  exists.
- Add requirement of a filename for --seq option with 'sololtr' command, which makes
  testing and setting options more stable.
- Add method to process both superfamilies concurrently with 'sololtr' command to 
  avoid waiting for one to finish before starting to process the other, while
  also handling individual sequences with child processes. This greatly speeds up
  processing, especially for large genomes.
- Store LTR family statistics when classifying LTRs to ensure the data for each
  superfamily is presented together (not split up as other threads are finishing).
- Properly set threads attribute when making LTR family exemplars (was being set to 1
  regardless of options).
- Increase Perl version requirement to 5.14, which is the minimum required to 
  build Bio::DB::HTS.
- Write all errors to STDERR instead of sometimes going to STDOUT for all classes.
- Add the sum of all deletions to report for 'illrecomb' command to get an idea about
  the total DNA removal for an LTR family.

0.04.5	12/12/16	Vancouver, BC

- Modify 'illrecomb' command to take combined LTR family FASTA file instead
  of input directory of classified elements. This prevents having to keep intermediate
  files or regenerate data to calculate patterns of DNA removal.

0.04.4	12/01/16	Vancouver, BC

- Modify 'maskref' command to now generate overlapping subsets of the genome
  (the specifics of the length and overlaps can be changed by the user) for
  masking. This allows more accurate estimates to be gained with very large
  (i.e, megabase sized) subsets, which greatly speeds up the process.
  The overlap size is added to the output table for comparing different parameters.

0.04.3	11/09/16	Vancouver, BC

- Add verbose option to 'findnonltrs' command to monitor progress.
- Add method to remove progress for each chromosome when masking with 'maskref' command
  to same disk space.
- Quiet the build of PAML when configuring dependencies. We still check for errors but the 
  user does not need to see the warnings.

0.04.2	11/05/16	Vancouver, BC

- Add new LTR family joining method that is less stringent. Now families are joined based
  on shared clustering patterns as opposed to the previous requirement of elements having to
  display the exact same clustering pattern to be included in a family.
- Refactor LTR family-finding methods by splitting out clustering methods into separate role.
  Now, the superfamily- and family-finding methods are separated in the command class. We now
  only call algorithms once instead of separately for each superfamily. This allows all the
  methods to be run in parallel (by default).
- Add 'tirage' command for calculating the age of TIR transposons.
- Fix bug with 'maskref' command with so complete refernce is written to final file instead of
  the individual split subsets.
- Adjust the --clean option with 'maskref' command so results may be kept for debugging or other
  purposes.
- Add check to 'maskref' to ensure the correct number of subsets are created from the reference.
- Add option to modify the percent identity threshold for matches with the 'maskref' command.
- Add method to not block when masking reference and generating masking report with 'maskref' command.
  This change results in about 40-50% reduction in runtimes when masking. 
- Add method to avoid hardcoding BLAST+ version so the latest is always fetched properly.
- Add method to run finding exemplars with 'classifyltrs' command in parallel.
 
0.04.1	10/12/16	Vancouver, BC

- Update BLAST+ release.

0.04.0	10/04/16	Vancouver, BC

- Add options for controlling how the solo-LTR finding works. There is a reasonable default now,
  20 families, so that the command will not attempt to do hundreds of alignments and run for
  days or weeks.
- Modify the masking algorithm to give finer control over how stringent the masking should
  be. 
- Parallelize the masking procedure to process chunks of chromosomes (default is 50kb) at a time. 
  This greatly reduces the memory usage and speeds up the process.
- Add method to write a table  of masking results to show what percentage of each repeat type was masked
  in the reference.

0.03.9	09/08/16	Vancouver, BC

- Adjust FASTA header in findhelitrons output to match the ID in the GFF output. Fix
  variable naming issue in Helsearch class with sequence IDs (though it did not appear to
  cause issues it could have because the ID variable was being reused/renamed).

0.03.8	08/30/16	Vancouver, BC
- Configure Tephra to install an HMM library of TE models and a database of tRNA sequences.
  This change reduces the dependencies to only a genome as the input to the search programs.

0.03.7	08/18/16	Vancouver, BC

- Parallelize sololtr command to speed up the solo-LTR search.
- Update the sololtr command usage menu which did not reflect all of the available options.

0.03.6	08/09/16	Vancouver, BC

- Increase BLAST+ package version.
- Simplify install instructions to use latest release only.

0.03.5	07/28/16	Vancouver, BC

- Add reannotate command for transferring annotations from a reference set to Tephra annotations.
- Fix minor issue with help command not being recognized with main tephra command. 

0.03.4	07/06/16	Vancouver, BC

- Bug fix for formatting output of illrecomb command (fixes #16 on github).
- Refactor illrecomb methods to not write intermediate files.
- Add method to clean up intermediate results from findnonltrs command.
- Adjust muscle command for sololtr and illrecomb commands to not throw away errors. 

0.03.3	06/24/16	Vancouver, BC

- Bug fix for ltrage command. The wrong arguments to muscle were introduced in changes for v0.03.2, which
  has been updated.

0.03.2	06/21/16	Vancouver, BC

- Bug fix in setting the wrong repeat_region ID for elements when evaluating overlaps (fixes #15 on github).
- Bug fix for parsing Helitron IDs from final FASTA file. A minimal parser (no dependencies) was added to the class 
  to account for Bio::DB::HTS::Kseq not parsing anything past the first whitespace. 
- Remove use of clustalw2 everywhere in favor of muscle. This solves a couple of issues, as clustalw2 was quite noisy and
  error-prone when compiling from source.
- Increase default number of matches to consider in LTR family clustering/classification in an arbitrarily large number.
  This will keep families from split based on the size in case there is an unusually large number of matches.

0.03.1	06/09/16	Vancouver, BC

- Add --all option to 'ltrage' command for calculating age of all LTR-RTs in a GFF
  instead of just the default exemplars. This makes getting the age a bit easier now
  by just requiring one command as opposed to one for each superfamily.

0.03.0	06/08/16	Vancouver, BC

- Remove use of SAMtools for indexing/extracting subsequences.
- Remove use of Bio::SeqIO (BioPerl) for parsing sequence files.
- Add Bio::DB::HTS for extracting subsequences and parsing sequences.
- Fix bugs in getting TIR element range (previously off by 1).
- Rework solo-LTR search to look for exemplars and extract LTR features of all
  elements if they are not found. This avoids duplicating work done in the exemplar-finding step.
- Add test file of exemplars to speed up testing (also, no exemplars would be found in
  the small test set)
- Remove use of Bio::Tools::GFF (BioPerl) in favor of Bio::GFF3::LowLevel for parsing GFF features. 
  This is a made a huge performance improvement, as well as simplifying how features would be formatted
  for writing.
- Add strand to non-LTR output (GFF).
- Add the same transposase filtering method to all steps of LTR classification.
- Adjust gap filtering step in non-LTR search to filter elements only in the final stage of classification.

0.02.7	05/06/16	Vancouver, BC

- Bug fix with HMMERv2 path not being set correctly for 'findnonltrs' command.
- Add threshold for percent of Ns in non-LTR-RTs.
- Bug fix to get --help and --man options working correctly.
- Add method to remove leading or trailing gap sequences in 'findnonltrs' command.
- Expand list of transposase-related models to filter prior to LTR family classification.

0.02.6	04/26/16	Vancouver, BC

- Bug fix with LTR-RT exemplar IDs causing issues with generating the LTR exemplar files.
- Bug fix in LTR-RT refinement step to check that elements exist before trying to summarize features.
- Remove used method for getting TE SO terms (added to the 'Util' role to be used by other classes).

0.02.5	04/21/16	Vancouver, BC

- When classifying LTR-RT families, skip transposase domain matches to avoid artifacts in the family assignment.
- Bug fix in 'findhelitrons' command that was writing the coordinates in the wrong order for elements
  on the minus strand.
- Bug fix in the 'make_exemplars' method for the LTR-RT classification, which was writing empty files.
- Standardize IDs with other methods when creating LTR-RT exemplars.
- Add debug option for 'findhelitrons' command to optionally show external commands.

0.02.4	04/07/16	Vancouver, BC

- Add method to standarize FASTA identifiers between GFF and FASTA files for the classifyltrs command.
- Write the element name to the output file of the ltrage command instead of the tree file name. Now the FASTA
  identifier from the combined families file will be written to the ltrage output.
- Add LTR family name to GFF output of classifyltrs command.
- Remove the generation of separate GFF files for each LTR superfamily as this information can be easily
  taken from the annotated GFF file.
- Bug fix for --clean method of ltrage method. A class attribute was missing for this option so it would have
  never worked previously.
- Disable building GUI apps for EMBOSS, which are not used internally.
- Add Perl import for configuration (Net::FTP) which is not available in core for older Perls.

0.02.3	04/04/16	Vancouver, BC

- Bug fix for getting URL of deps from sourceforge (which has changed).

0.02.2	  03/17/16    Vancouver, BC

- Fix GO term IDs modified incorrectly during version change.
- Add HMMERv3 to configuration to avoid version issues (HMMERv3 from package manager is too old)
  and to simplify installation for the user.

0.02.1	03/17/16	Vancouver, BC

- Changes to fix threading issue with ltrage command.

0.02	03/15/16	Vancouver, BC

- Improve annotation of unclassifed LTR elements.
- Add option for installation/configuration in any location.
- Add configuration for 'findltrs' command to facilitate finding elements in a broader number of species.
- Add sighandler for BLAST processes.
- Add separate Install/Config classes for easily getting configuration information.
- Add options for controlling the thresholds of matches when annotation LTR elements.
- Add debug option for seeing the external commands that were executed.
- Add 'development' option for skipping long-running commands that require software that I cannot distribute.
- Set up Travis-CI for automated testing. This works efficiently because we are now using pre-built binaries and a pre-configured
  Tephra root directory.

- Add option for substitution rate for ltrage command.
- Add multiple options for controlling the stringency of matches that are counted as real for the sololtrs command.
- Add output of a single collated report from ltrage command instead of individual reports for each element.
- Change input for findnonltrs command from directory of individual sequences to the more convenient multi-FASTA format.

0.01	12/24/15	Vancouver, BC

- Initial release.

